# https://taskfile.dev

version: '3'

vars:
  GOPROXY: 'https://goproxy.cn,direct'
  GOSUMDB: sum.golang.google.cn
  VERSION_PKG: github.com/ergoapi/util/version
  ROOT_DIR: $(pwd)
  BUILD_DIR: $(pwd)/_output
  BIN_DIR: $(pwd)/_output/bin
  BUILD_RELEASE: $(cat VERSION || echo "0.0.1")
  BUILD_DATE: $(date +%Y%m%d%H)
  GIT_BRANCH: $(git branch -r --contains | head -1 | sed -E -e "s%(HEAD ->|origin|upstream)/?%%g" | xargs)
  GIT_COMMIT: $(git rev-parse --short HEAD || echo "abcdefgh")
  APP_VERSION: "{{.BUILD_RELEASE}}-{{.BUILD_DATE}}-{{.GIT_COMMIT}}"
  LOCAL_OS: $(go version | awk '{print $NF}')
  GOOS: $(go env GOOS)
  GOARCH: $(go env GOARCH)
  IMAGE: ghcr.io/ysicing/go-example
  IMAGE2: ttl.sh/ysicing/go-example
  LDFLAGS: "-w -s \
    -X '{{.VERSION_PKG}}.gitVersion={{.BUILD_RELEASE}}' \
    -X '{{.VERSION_PKG}}.buildDate={{.BUILD_DATE}}' \
    -X '{{.VERSION_PKG}}.gitCommit={{.GIT_COMMIT}}' \
    -X '{{.VERSION_PKG}}.release={{.BUILD_RELEASE}}' \
    -X '{{.VERSION_PKG}}.gitBranch={{.GIT_BRANCH}}' \
    -X 'k8s.io/client-go/pkg/version.gitVersion={{.BUILD_RELEASE}}' \
    -X 'k8s.io/client-go/pkg/version.gitCommit={{.GIT_COMMIT}}' \
    -X 'k8s.io/client-go/pkg/version.gitTreeState=dirty' \
    -X 'k8s.io/client-go/pkg/version.buildDate={{.BUILD_DATE}}' \
    -X 'k8s.io/client-go/pkg/version.gitMajor=1' \
    -X 'k8s.io/client-go/pkg/version.gitMinor=24' \
    -X 'k8s.io/component-base/version.gitVersion={{.BUILD_RELEASE}}' \
    -X 'k8s.io/component-base/version.gitCommit={{.GIT_COMMIT}}' \
    -X 'k8s.io/component-base/version.gitTreeState=dirty' \
    -X 'k8s.io/component-base/version.gitMajor=1' \
    -X 'k8s.io/component-base/version.gitMinor=24' \
    -X 'k8s.io/component-base/version.buildDate={{.BUILD_DATE}}'"

tasks:
  gencopyright:
    desc: generate code license
    cmds:
      - go install github.com/google/addlicense@latest
      - hack/scripts/gencopyright.sh

  gomod:
    desc: update go mod
    run: once
    cmds:
      - go mod tidy

  gofmt:
    desc: format go code
    cmds:
      - go install golang.org/x/tools/cmd/goimports@latest
      - gofmt -s -w .
      - goimports -w .

  golint:
    desc: lint go code
    cmds:
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
      - golangci-lint run -v ./...

  lint:
    desc: lint code
    cmds:
      - task: gofmt
      - task: golint

  govulncheck:
    desc: Vulnerability detection
    cmds:
      - go install golang.org/x/vuln/cmd/govulncheck@latest
      - govulncheck ./...

  gci:
    desc: gci
    cmds:
      - go install github.com/daixiang0/gci@v0.13.1
      - gci write --skip-generated --custom-order -s standard -s "prefix(app)" -s default -s blank -s dot .

  fmt:
    desc: format code
    cmds:
      - task: gomod
      - task: gencopyright
      - task: lint
      - task: govulncheck
      - task: gci

  clean:
    desc: clean build
    cmds:
      - rm -rf _output
      - rm -rf dist

  godoc:
    desc: update docs
    cmds:
      - hack/scripts/gendocs.sh

  docker:
    desc: build docker image
    cmds:
      - docker buildx build --pull --push -t {{.IMAGE}} -t {{.IMAGE2}} -t {{.IMAGE}}:{{.BUILD_RELEASE}} -t {{.IMAGE2}}:{{.APP_VERSION}} -f hack/docker/Dockerfile .

  build:
    desc: build
    deps:
      - task: clean
    cmds:
      - go install github.com/mitchellh/gox@latest
      - gox -os={{.GOOS}} -arch={{.GOARCH}} -output="{{.BIN_DIR}}/goexample" -ldflags "{{.LDFLAGS}}"

  default:
    desc: default linux
    cmds:
      - task: clean
